{
  "swagger": "2.0",
  "info": {
    "description": "Online Grocery Store",
    "version": "1.0.0",
    "title": "Online Grocery Store"
  },
  "basePath": "",
  "paths": {
    "/api/v1.0/item": {
      "post": {
        "tags": [
          "item"
        ],
        "summary": "Add a new item to the store",
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "an authorization header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "body",
            "name": "body",
            "description": "Item object that needs to be added to the store",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                },
                "category": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Successfully added",
            "schema": {
              "$ref": "#/definitions/Item"
            }
          },
          "400": {
            "description": "Bad request"
          },
          "403": {
            "description": "Item with this id already exists"
          }
        }
      }
    },
    "/api/v1.0/items/": {
      "get": {
        "tags": [
          "item"
        ],
        "summary": "Returns all the items",
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Item"
              }
            }
          }
        }
      }
    },
    "/api/v1.0/items/{itemID}": {
      "get": {
        "tags": [
          "item"
        ],
        "summary": "Find item by ID",
        "description": "Returns a single item",
        "parameters": [
          {
            "name": "itemID",
            "in": "path",
            "description": "ID of item to return",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Item"
            }
          },
          "404": {
            "description": "Item not found"
          }
        }
      },
      "put": {
        "tags": [
          "item"
        ],
        "summary": "Edit existing item",
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "an authorization header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "itemID",
            "in": "path",
            "description": "ID of item to edit",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Item object containing updaed item name and category",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Item"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully edited",
            "schema": {
              "$ref": "#/definitions/Item"
            }
          },
          "400": {
            "description": "Bad request"
          },
          "404": {
            "description": "Item not found"
          }
        }
      },
      "delete": {
        "tags": [
          "item"
        ],
        "summary": "Deletes an item",
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "an authorization header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "itemID",
            "in": "path",
            "description": "Item id to delete",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    },
    "/token/register": {
      "post": {
        "tags": [
          "auth"
        ],
        "summary": "Register new user",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "New user credentials",
            "schema": {
              "type": "object",
              "properties": {
                "username": {
                  "type": "string"
                },
                "password": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Sucessfully registered"
          },
          "403": {
            "description": "User with this username already exists"
          }
        }
      }
    },
    "/token/auth": {
      "post": {
        "tags": [
          "auth"
        ],
        "summary": "Log in",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "User credentials",
            "schema": {
              "type": "object",
              "properties": {
                "username": {
                  "type": "string"
                },
                "password": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Sucessfully logged in",
            "schema": {
              "type": "object",
              "properties": {
                "access_token": {
                  "type": "string"
                },
                "refresh_token": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Incorrect username or password"
          }
        }
      }
    },
    "/token/refresh": {
      "post": {
        "tags": [
          "auth"
        ],
        "summary": "Refresh auth token",
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "Refresh token",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Auth token sucessfully refreshed",
            "schema": {
              "type": "object",
              "properties": {
                "access_token": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "No cookie"
          }
        }
      }
    },
    "/token/remove": {
      "delete": {
        "tags": [
          "auth"
        ],
        "summary": "Log out",
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "Refresh token",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Sucessfully logged out"
          }
        }
      }
    },
    "/token/validate": {
      "post": {
        "tags": [
          "auth"
        ],
        "summary": "Validate existing user token",
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "Access token",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User token is valid"
          },
          "201": {
            "description": "User token is invalid"
          }
        }
      }
    }
  },
  "definitions": {
    "Item": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64",
          "required": true
        },
        "name": {
          "type": "string",
          "required": false
        },
        "category": {
          "type": "string",
          "required": false
        }
      }
    }
  }
}